Entering handleSshPrivateKeys()
Entering parseParameters(--command=uname --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=uname 1
Debug: parseParameters(): Setting variable command to value uname
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(razor checkState,runAs)
Entering dynamicHandler(razor)
Debug: dynamicHandler(): Not a dynamic group: razor, passing to parseEntry
Entering parseEntry(razor) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(razor /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for razor with value guest
Entering capsFirst(guest)
Entering parseGuest(razor)
Entering tokenReader(setVars razor osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Using previously set entry for razor
Entering cutParentheses(guest razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio))
Debug: tokenReader(): Looking up osmt for razor at position 3
Debug: tokenReader(): Looking up acmt for razor at position 4
Debug: tokenReader(): Looking up exmt for razor at position 5
Debug: tokenReader(): Looking up user for razor at position 6
Debug: tokenReader(): Looking up admin for razor at position 7
Debug: tokenReader(): Looking up addr for razor at position 8
Debug: tokenReader(): Looking up host for razor at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for razor with value guest
Debug: tokenValidator(): Verifying osmt for razor with value rhel6
Debug: tokenValidator(): Verifying acmt for razor with value ssh
Debug: tokenValidator(): Verifying exmt for razor with value ssh
Debug: tokenValidator(): Verifying user for razor with value rubin
Debug: tokenValidator(): Verifying admin for razor with value root
Debug: tokenValidator(): Verifying addr for razor with value 172.17.1.41
Entering checkNameOrAddress(172.17.1.41)
Debug: tokenValidator(): Verifying vrmt for razor with value esx
Debug: tokenValidator(): Verifying port for razor with value none
Debug: tokenValidator(): Verifying svmt for razor with value none
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(razor checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(razor) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=razor, addr=172.17.1.41, acstate=unset, terminal=screen
Entering printPortState(172.17.1.41 22) with environment timeout=1501
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.41
Debug: printPortState(): Port 22 on 172.17.1.41 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(razor) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.41, name=razor, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=uname
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on razor)
Entering sshTellCommandWriter(172.17.1.41 rubin uname)
Entering viaScript(ssh  -l 'rubin' '172.17.1.41' 'uname')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.razor.87846.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=uname --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=uname 1
Debug: parseParameters(): Setting variable command to value uname
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(razor checkState,runAs)
Entering dynamicHandler(razor)
Debug: dynamicHandler(): Not a dynamic group: razor, passing to parseEntry
Entering parseEntry(razor) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(razor /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for razor with value guest
Entering capsFirst(guest)
Entering parseGuest(razor)
Entering tokenReader(setVars razor osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Using previously set entry for razor
Entering cutParentheses(guest razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio))
Debug: tokenReader(): Looking up osmt for razor at position 3
Debug: tokenReader(): Looking up acmt for razor at position 4
Debug: tokenReader(): Looking up exmt for razor at position 5
Debug: tokenReader(): Looking up user for razor at position 6
Debug: tokenReader(): Looking up admin for razor at position 7
Debug: tokenReader(): Looking up addr for razor at position 8
Debug: tokenReader(): Looking up host for razor at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for razor with value guest
Debug: tokenValidator(): Verifying osmt for razor with value rhel6
Debug: tokenValidator(): Verifying acmt for razor with value ssh
Debug: tokenValidator(): Verifying exmt for razor with value ssh
Debug: tokenValidator(): Verifying user for razor with value rubin
Debug: tokenValidator(): Verifying admin for razor with value root
Debug: tokenValidator(): Verifying addr for razor with value 172.17.1.41
Entering checkNameOrAddress(172.17.1.41)
Debug: tokenValidator(): Verifying vrmt for razor with value esx
Debug: tokenValidator(): Verifying port for razor with value none
Debug: tokenValidator(): Verifying svmt for razor with value none
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(razor checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(razor) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=razor, addr=172.17.1.41, acstate=unset, terminal=screen
Entering printPortState(172.17.1.41 22) with environment timeout=1501
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.41
Debug: printPortState(): Port 22 on 172.17.1.41 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(razor) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.41, name=razor, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=uname
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on razor)
Entering sshTellCommandWriter(172.17.1.41 rubin uname)
Entering viaScript(ssh  -l 'rubin' '172.17.1.41' 'uname')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.razor.87977.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.razor.87977.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=uname --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=uname 1
Debug: parseParameters(): Setting variable command to value uname
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(razor checkState,runAs)
Entering dynamicHandler(razor)
Debug: dynamicHandler(): Not a dynamic group: razor, passing to parseEntry
Entering parseEntry(razor) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(razor /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for razor with value guest
Entering capsFirst(guest)
Entering parseGuest(razor)
Entering tokenReader(setVars razor osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Using previously set entry for razor
Entering cutParentheses(guest razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio))
Debug: tokenReader(): Looking up osmt for razor at position 3
Debug: tokenReader(): Looking up acmt for razor at position 4
Debug: tokenReader(): Looking up exmt for razor at position 5
Debug: tokenReader(): Looking up user for razor at position 6
Debug: tokenReader(): Looking up admin for razor at position 7
Debug: tokenReader(): Looking up addr for razor at position 8
Debug: tokenReader(): Looking up host for razor at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for razor with value guest
Debug: tokenValidator(): Verifying osmt for razor with value rhel6
Debug: tokenValidator(): Verifying acmt for razor with value ssh
Debug: tokenValidator(): Verifying exmt for razor with value ssh
Debug: tokenValidator(): Verifying user for razor with value rubin
Debug: tokenValidator(): Verifying admin for razor with value root
Debug: tokenValidator(): Verifying addr for razor with value 172.17.1.41
Entering checkNameOrAddress(172.17.1.41)
Debug: tokenValidator(): Verifying vrmt for razor with value esx
Debug: tokenValidator(): Verifying port for razor with value none
Debug: tokenValidator(): Verifying svmt for razor with value none
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(razor checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(razor) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=razor, addr=172.17.1.41, acstate=unset, terminal=screen
Entering printPortState(172.17.1.41 22) with environment timeout=1501
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.41
Debug: printPortState(): Port 22 on 172.17.1.41 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(razor) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.41, name=razor, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=uname
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on razor)
Entering sshTellCommandWriter(172.17.1.41 rubin uname)
Entering viaScript(ssh  -l 'rubin' '172.17.1.41' 'uname')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.razor.88516.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=uname --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=uname 1
Debug: parseParameters(): Setting variable command to value uname
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(razor checkState,runAs)
Entering dynamicHandler(razor)
Debug: dynamicHandler(): Not a dynamic group: razor, passing to parseEntry
Entering parseEntry(razor) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(razor /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for razor with value guest
Entering capsFirst(guest)
Entering parseGuest(razor)
Entering tokenReader(setVars razor osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Using previously set entry for razor
Entering cutParentheses(guest razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio))
Debug: tokenReader(): Looking up osmt for razor at position 3
Debug: tokenReader(): Looking up acmt for razor at position 4
Debug: tokenReader(): Looking up exmt for razor at position 5
Debug: tokenReader(): Looking up user for razor at position 6
Debug: tokenReader(): Looking up admin for razor at position 7
Debug: tokenReader(): Looking up addr for razor at position 8
Debug: tokenReader(): Looking up host for razor at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
razor(rhel6,ssh,ssh,rubin,root,172.17.1.41,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for razor with value guest
Debug: tokenValidator(): Verifying osmt for razor with value rhel6
Debug: tokenValidator(): Verifying acmt for razor with value ssh
Debug: tokenValidator(): Verifying exmt for razor with value ssh
Debug: tokenValidator(): Verifying user for razor with value rubin
Debug: tokenValidator(): Verifying admin for razor with value root
Debug: tokenValidator(): Verifying addr for razor with value 172.17.1.41
Entering checkNameOrAddress(172.17.1.41)
Debug: tokenValidator(): Verifying vrmt for razor with value esx
Debug: tokenValidator(): Verifying port for razor with value none
Debug: tokenValidator(): Verifying svmt for razor with value none
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(razor checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(razor) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=razor, addr=172.17.1.41, acstate=unset, terminal=screen
Entering printPortState(172.17.1.41 22) with environment timeout=1501
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.41
Debug: printPortState(): Port 22 on 172.17.1.41 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(razor) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.41, name=razor, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=uname
Entering isLoopback(172.17.1.41)
Entering isLocal(razor)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on razor)
Entering sshTellCommandWriter(172.17.1.41 rubin uname)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.41' 'uname')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.razor.89374.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.razor.89374.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(donald checkState,accessEntity)
Entering dynamicHandler(donald)
Debug: dynamicHandler(): Not a dynamic group: donald, passing to parseEntry
Entering parseEntry(donald) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(donald /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for donald with value guest
Entering capsFirst(guest)
Entering parseGuest(donald)
Entering tokenReader(setVars donald osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
donald(rhel6,ssh,ssh,was,root,172.17.1.48,esxio)
Debug: tokenReader(): Using previously set entry for donald
Entering cutParentheses(guest donald(rhel6,ssh,ssh,was,root,172.17.1.48,esxio))
Debug: tokenReader(): Looking up osmt for donald at position 3
Debug: tokenReader(): Looking up acmt for donald at position 4
Debug: tokenReader(): Looking up exmt for donald at position 5
Debug: tokenReader(): Looking up user for donald at position 6
Debug: tokenReader(): Looking up admin for donald at position 7
Debug: tokenReader(): Looking up addr for donald at position 8
Debug: tokenReader(): Looking up host for donald at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
donald(rhel6,ssh,ssh,was,root,172.17.1.48,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for donald with value guest
Debug: tokenValidator(): Verifying osmt for donald with value rhel6
Debug: tokenValidator(): Verifying acmt for donald with value ssh
Debug: tokenValidator(): Verifying exmt for donald with value ssh
Debug: tokenValidator(): Verifying user for donald with value was
Debug: tokenValidator(): Verifying admin for donald with value root
Debug: tokenValidator(): Verifying addr for donald with value 172.17.1.48
Entering checkNameOrAddress(172.17.1.48)
Debug: tokenValidator(): Verifying vrmt for donald with value esx
Debug: tokenValidator(): Verifying port for donald with value none
Debug: tokenValidator(): Verifying svmt for donald with value none
Entering isLoopback(172.17.1.48)
Entering isLocal(donald)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(donald checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(donald) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=donald, addr=172.17.1.48, acstate=unset, terminal=screen
Entering printPortState(172.17.1.48 22) with environment timeout=1501
Entering isLoopback(172.17.1.48)
Entering isLocal(donald)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.48
Debug: printPortState(): Port 22 on 172.17.1.48 is open
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(donald) with environment acmt=ssh, access=true, xsastype=user, user=was, upwd=, admin=root, apwd=
Entering sshAccessHandler(access) with environment name=donald, addr=172.17.1.48, acstate=active, terminal=screen
Entering screenTerminalHandler(ssh) with environment name=donald, addr=172.17.1.48, sshopts=-i
/home/rubin/.ssh/id_dsa, xsasuser=was, rubin=, TERM=rxvt
Debug: screenTerminalHandler(): Setting up initial screen in background
Debug: screenTerminalHandler(): Creating window for tezro (window 0)
Debug: screenTerminalHandler(): Creating window for donald from outside of screen
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Debug: mapEntryPoint(): Terminal exit hook for screen: resuming created screen session
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable debug to value 1
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Looking up host for alpha at position 9
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for alpha with value guest
Debug: tokenValidator(): Verifying osmt for alpha with value rhel6
Debug: tokenValidator(): Verifying acmt for alpha with value ssh
Debug: tokenValidator(): Verifying exmt for alpha with value ssh
Debug: tokenValidator(): Verifying user for alpha with value db2
Debug: tokenValidator(): Verifying admin for alpha with value root
Debug: tokenValidator(): Verifying addr for alpha with value 172.17.1.47
Entering checkNameOrAddress(172.17.1.47)
Debug: tokenValidator(): Verifying vrmt for alpha with value esx
Debug: tokenValidator(): Verifying port for alpha with value none
Debug: tokenValidator(): Verifying svmt for alpha with value none
Entering isLoopback(172.17.1.47)
Entering isLocal(alpha)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=alpha, addr=172.17.1.47, acstate=unset, terminal=screen
Entering printPortState(172.17.1.47 22) with environment timeout=1501
Entering isLoopback(172.17.1.47)
Entering isLocal(alpha)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.47
Debug: printPortState(): Port 22 on 172.17.1.47 is open
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(alpha) with environment acmt=ssh, access=true, xsastype=admin, user=db2, upwd=, admin=root, apwd=
Entering sshAccessHandler(access) with environment name=alpha, addr=172.17.1.47, acstate=active, terminal=screen
Entering screenTerminalHandler(ssh) with environment name=alpha, addr=172.17.1.47, sshopts=-i
/home/rubin/.ssh/id_dsa, xsasuser=root, rubin=, TERM=screen
Debug: screenTerminalHandler(): Creating window for alpha from within screen
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable debug to value 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.19111
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.19111
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
verbose, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.19240
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.19240
Entering listHelper(all)
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.20544
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.20544
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.20544
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.20544
Debug: tokenReader(): Looking up exmt for alpha at position 5
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.20606
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.20606
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Writing variable "" with value: "db2" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Writing variable "" with value: "root" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Writing variable "" with value: "172.17.1.47" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Looking up host for alpha at position 9
Debug: tokenReader(): Writing variable "" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.20606
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.20606
Entering tokenReader(setVars  vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for 
Entering entryReader( /home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Debug: tokenReader(): Name not passed
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.23872
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.23872
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Writing variable "" with value: "db2" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Writing variable "" with value: "root" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Writing variable "" with value: "172.17.1.47" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Looking up host for alpha at position 9
Debug: tokenReader(): Writing variable "" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.23872
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.23872
Entering tokenReader(setVars  vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for 
Entering entryReader( /home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Debug: tokenReader(): Name not passed
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering checkState() with environment type=guest, acmt=, exmt=
Entering parseEntry() with environment config=/home/rubin/.session/tmp/session.conf.active
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.24455
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.24455
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Writing variable "" with value: "db2" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Writing variable "" with value: "root" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Writing variable "" with value: "172.17.1.47" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up host for alpha at position 9
Debug: tokenReader(): Writing variable "" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24455
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "" with value: "esx" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24455
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for alpha with value guest
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=, exmt=
Entering parseEntry(esxio) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for esxio with value host
Entering capsFirst(host)
Entering parseHost(esxio)
Entering tokenReader(setVars esxio osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx)
Debug: tokenReader(): Using previously set entry for esxio
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up osmt for esxio at position 3
Debug: tokenReader(): Writing variable "" with value: "esxi4" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up acmt for esxio at position 4
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up exmt for esxio at position 5
Debug: tokenReader(): Writing variable "" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up user for esxio at position 6
Debug: tokenReader(): Writing variable "" with value: "root" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up admin for esxio at position 7
Debug: tokenReader(): Writing variable "" with value: "root" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up addr for esxio at position 8
Debug: tokenReader(): Writing variable "" with value: "172.17.1.4" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "" with value: "esx" to /home/rubin/.session/tmp/session.tokens.24455
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24455
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for esxio with value host
Entering checkState() with environment type=host, acmt=, exmt=
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(alpha) with environment acmt=, access=true, xsastype=user, user=, upwd=, admin=, apwd=
Debug: doFunction(): Function accessEntity returned status 127
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Debug: mapEntryPoint(): Terminal exit hook for screen: resuming created screen session
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.24622
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.24622
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Writing variable "user" with value: "db2" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.47" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up host for alpha at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24622
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24622
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for alpha with value guest
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=, exmt=
Entering parseEntry(esxio) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for esxio with value host
Entering capsFirst(host)
Entering parseHost(esxio)
Entering tokenReader(setVars esxio osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx)
Debug: tokenReader(): Using previously set entry for esxio
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up osmt for esxio at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "esxi4" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up acmt for esxio at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up exmt for esxio at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up user for esxio at position 6
Debug: tokenReader(): Writing variable "user" with value: "root" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up admin for esxio at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up addr for esxio at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.4" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.24622
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24622
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for esxio with value host
Entering checkState() with environment type=host, acmt=, exmt=
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(alpha) with environment acmt=, access=true, xsastype=user, user=, upwd=, admin=, apwd=
Debug: doFunction(): Function accessEntity returned status 127
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Debug: mapEntryPoint(): Terminal exit hook for screen: resuming created screen session
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.24790
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.24790
Entering mapEntryPoint(alpha checkState,accessEntity)
Entering dynamicHandler(alpha)
Debug: dynamicHandler(): Not a dynamic group: alpha, passing to parseEntry
Entering parseEntry(alpha) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(alpha /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for alpha with value guest
Entering capsFirst(guest)
Entering parseGuest(alpha)
Entering tokenReader(setVars alpha osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Using previously set entry for alpha
Entering cutParentheses(guest alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio))
Debug: tokenReader(): Looking up osmt for alpha at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up acmt for alpha at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up exmt for alpha at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up user for alpha at position 6
Debug: tokenReader(): Writing variable "user" with value: "db2" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up admin for alpha at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up addr for alpha at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.47" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Looking up host for alpha at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24790
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
alpha(rhel6,ssh,ssh,db2,root,172.17.1.47,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.24790
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.24790
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for alpha with value guest
Debug: tokenValidator(): Verifying osmt for alpha with value rhel6
Debug: tokenValidator(): Verifying acmt for alpha with value ssh
Debug: tokenValidator(): Verifying exmt for alpha with value ssh
Debug: tokenValidator(): Verifying user for alpha with value db2
Debug: tokenValidator(): Verifying admin for alpha with value root
Debug: tokenValidator(): Verifying addr for alpha with value 172.17.1.47
Entering checkNameOrAddress(172.17.1.47)
Debug: tokenValidator(): Verifying vrmt for alpha with value esx
Debug: tokenValidator(): Verifying port for alpha with value none
Debug: tokenValidator(): Verifying svmt for alpha with value none
Entering isLoopback(172.17.1.47)
Entering isLocal(alpha)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(alpha checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(alpha) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=alpha, addr=172.17.1.47, acstate=unset, terminal=screen
Entering printPortState(172.17.1.47 22) with environment timeout=1501
Entering isLoopback(172.17.1.47)
Entering isLocal(alpha)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.47
Debug: printPortState(): Port 22 on 172.17.1.47 is open
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(alpha) with environment acmt=ssh, access=true, xsastype=user, user=db2, upwd=, admin=root, apwd=
Entering sshAccessHandler(access) with environment name=alpha, addr=172.17.1.47, acstate=active, terminal=screen
Entering screenTerminalHandler(ssh) with environment name=alpha, addr=172.17.1.47, sshopts=-i
/home/rubin/.ssh/id_dsa, xsasuser=db2, rubin=, TERM=rxvt
Debug: screenTerminalHandler(): Setting up initial screen in background
Debug: screenTerminalHandler(): Creating window for tezro (window 0)
Debug: screenTerminalHandler(): Creating window for alpha from outside of screen
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Debug: mapEntryPoint(): Terminal exit hook for screen: resuming created screen session
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=whoami --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=whoami 1
Debug: parseParameters(): Writing variable "command" with value: "whoami" to /home/rubin/.session/tmp/session.parameters.25961
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.25961
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.25961
Entering mapEntryPoint(portunes checkState,runAs)
Entering dynamicHandler(portunes)
Debug: dynamicHandler(): Not a dynamic group: portunes, passing to parseEntry
Entering parseEntry(portunes) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(portunes /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for portunes with value guest
Entering capsFirst(guest)
Entering parseGuest(portunes)
Entering tokenReader(setVars portunes osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
portunes(ubuntu12,ssh,ssh,rubin,root,172.17.1.9,esxio)
Debug: tokenReader(): Using previously set entry for portunes
Entering cutParentheses(guest portunes(ubuntu12,ssh,ssh,rubin,root,172.17.1.9,esxio))
Debug: tokenReader(): Looking up osmt for portunes at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up acmt for portunes at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up exmt for portunes at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up user for portunes at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up admin for portunes at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up addr for portunes at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.9" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Looking up host for portunes at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.25961
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
portunes(ubuntu12,ssh,ssh,rubin,root,172.17.1.9,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.25961
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.25961
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for portunes with value guest
Debug: tokenValidator(): Verifying osmt for portunes with value ubuntu12
Debug: tokenValidator(): Verifying acmt for portunes with value ssh
Debug: tokenValidator(): Verifying exmt for portunes with value ssh
Debug: tokenValidator(): Verifying user for portunes with value rubin
Debug: tokenValidator(): Verifying admin for portunes with value root
Debug: tokenValidator(): Verifying addr for portunes with value 172.17.1.9
Entering checkNameOrAddress(172.17.1.9)
Debug: tokenValidator(): Verifying vrmt for portunes with value esx
Debug: tokenValidator(): Verifying port for portunes with value none
Debug: tokenValidator(): Verifying svmt for portunes with value none
Entering isLoopback(172.17.1.9)
Entering isLocal(portunes)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(portunes checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(portunes) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=portunes, addr=172.17.1.9, acstate=unset, terminal=screen
Entering printPortState(172.17.1.9 22) with environment timeout=1501
Entering isLoopback(172.17.1.9)
Entering isLocal(portunes)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.9
Debug: printPortState(): Port 22 on 172.17.1.9 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(portunes) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.9, name=portunes, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=whoami
Entering isLoopback(172.17.1.9)
Entering isLocal(portunes)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on portunes)
Entering sshTellCommandWriter(172.17.1.9 rubin whoami)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.9' 'whoami')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.portunes.25961.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.portunes.25961.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.8562
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.8562
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.8562
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.8562
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.8562
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl  ipconfig)
Entering viaScript(winexe --debug-stderr --user='rubin@xs4all.nl' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.8562.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.8562.sh
Debug: doFunction(): Function runAs returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.8710
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.8710
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.8710
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.8710
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.8710
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl  ipconfig)
Entering viaScript(winexe --user='rubin@xs4all.nl' //172.17.1.40 'cmd.exe /c "ipconfig" 2> /dev/null')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.8710.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.8710.sh
Debug: doFunction(): Function runAs returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.8848
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.8848
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.8848
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.8848
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.8848
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl  ipconfig)
Entering viaScript(winexe --user='rubin@xs4all.nl' //172.17.1.40 'cmd.exe /c "ipconfig"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.8848.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.8848.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9240
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9240
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9240
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9240
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9240
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl\%s' //~w1nD0Ws~ 'cmd.exe /c "172.17.1.40"' 2> /dev/null
winexe -U='ipconfig\%s' // 'cmd.exe /c ""' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9240.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9240.sh
Debug: doFunction(): Function runAs returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9380
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9380
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9380
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9380
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9380
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl\%s' //~w1nD0Ws~ 'cmd.exe /c "172.17.1.40"' 2> /dev/null
winexe -U='ipconfig\%s' // 'cmd.exe /c ""' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9380.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9380.sh
Debug: doFunction(): Function runAs returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9522
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9522
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9522
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9522
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9522
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c "ipconfig"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9522.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9522.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9664
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9664
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9664
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9664
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9664
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl%$pass' //172.17.1.40 'cmd.exe /c "ipconfig"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9664.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9664.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9817
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9817
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9817
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9817
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9817
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl%~w1nD0Ws~ //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9817.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9817.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.9971
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.9971
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.9971
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.9971
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.9971
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.9971.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.9971.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10110
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10110
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10110
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10110
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10110
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U='rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10110.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10110.sh
Debug: doFunction(): Function runAs returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10258
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10258
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10258
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10258
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10258
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U rubin@xs4all.nl%~w1nD0Ws~ //172.17.1.40 'cmd.exe /c "ipconfig"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10258.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10258.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10398
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10398
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.10398
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10398
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10398
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10398
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U admin%s1m0ns&4ll3m4n! //172.17.1.40 'cmd.exe /c "ipconfig"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10398.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10398.sh
Debug: doFunction(): Function runAs returned status 127
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10552
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10552
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.10552
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10552
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10552
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10552
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U admin%s1m0ns&4ll3m4n! //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10552.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10552.sh
Debug: doFunction(): Function runAs returned status 127
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10694
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10694
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.10694
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10694
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10694
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10694
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U 'admin%s1m0ns&4ll3m4n!' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10694.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10694.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10836
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10836
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.10836
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10836
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10836
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10836
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U 'admin%s1m0ns&4ll3m4n!' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10836.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10836.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.10973
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.10973
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.10973
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.10973
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.10973
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.10973
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U 'admin%s1m0ns&4ll3m4n!' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.10973.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.10973.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.11110
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.11110
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.11110
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.11110
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11110
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11110
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U 'admin%s1m0ns&4ll3m4n!' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.11110.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug --admin) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug admin, Values=ipconfig 1 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.11270
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.11270
Debug: parseParameters(): Writing variable "admin" with value: "1" to /home/rubin/.session/tmp/session.parameters.11270
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.11270
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11270
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11270
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=admin
Entering smbExecHandler(runasadmin)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute admin-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 admin s1m0ns&4ll3m4n! ipconfig)
Entering viaScript(winexe -U 'admin%s1m0ns&4ll3m4n!' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.11270.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.11270.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--command=ipconfig --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ipconfig 1
Debug: parseParameters(): Writing variable "command" with value: "ipconfig" to /home/rubin/.session/tmp/session.parameters.11407
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.11407
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.11407
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11407
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11407
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ ipconfig)
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c "ipconfig"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.11407.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.11407.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.11907
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.11907
Entering mapEntryPoint(champ checkState,printState)
Entering dynamicHandler(champ)
Debug: dynamicHandler(): Not a dynamic group: champ, passing to parseEntry
Entering parseEntry(champ) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(champ /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for champ with value guest
Entering capsFirst(guest)
Entering parseGuest(champ)
Entering tokenReader(setVars champ osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
champ(rhel6,ssh,ssh,build,root,10.10.12.11,zildjian)
Debug: tokenReader(): Using previously set entry for champ
Entering cutParentheses(guest champ(rhel6,ssh,ssh,build,root,10.10.12.11,zildjian))
Debug: tokenReader(): Looking up osmt for champ at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up acmt for champ at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up exmt for champ at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up user for champ at position 6
Debug: tokenReader(): Writing variable "user" with value: "build" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up admin for champ at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up addr for champ at position 8
Debug: tokenReader(): Writing variable "addr" with value: "10.10.12.11" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up host for champ at position 9
Debug: tokenReader(): Writing variable "host" with value: "zildjian" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11907
Entering tokenReader(setVars zildjian vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
champ(rhel6,ssh,ssh,build,root,10.10.12.11,zildjian)
Debug: tokenReader(): Reading entry for zildjian
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11907
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for champ with value guest
Debug: tokenValidator(): Verifying osmt for champ with value rhel6
Debug: tokenValidator(): Verifying acmt for champ with value ssh
Debug: tokenValidator(): Verifying exmt for champ with value ssh
Debug: tokenValidator(): Verifying user for champ with value build
Debug: tokenValidator(): Verifying admin for champ with value root
Debug: tokenValidator(): Verifying addr for champ with value 10.10.12.11
Entering checkNameOrAddress(10.10.12.11)
Debug: tokenValidator(): Verifying vrmt for champ with value vmw
Debug: tokenValidator(): Verifying port for champ with value none
Debug: tokenValidator(): Verifying svmt for champ with value none
Entering isLoopback(10.10.12.11)
Entering isLocal(champ)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(champ checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(champ) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=champ, addr=10.10.12.11, acstate=unset, terminal=screen
Entering printPortState(10.10.12.11 22) with environment timeout=1501
Entering isLoopback(10.10.12.11)
Entering isLocal(champ)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 10.10.12.11
Debug: printPortState(): Port 22 on 10.10.12.11 is closed
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11907
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering vmwVirtHandler(state) with environment host=zildjian, name=champ, state=unset, vrmt=vmw, memsize=, destroy=false
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11907
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ "C:/Program Files (x86)/VMware/VMware Workstation/vmrun" list)
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c ""C:/Program Files (x86)/VMware/VMware Workstation/vmrun" list"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.11907.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.11907.sh
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.11907
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.11907
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ "C:/Program Files (x86)/VMware/VMware Workstation/vmrun" listSnapshots "D:/Systems/Personal Computer/VMware/champ/champ.vmx")
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c ""C:/Program Files (x86)/VMware/VMware Workstation/vmrun" listSnapshots "D:/Systems/Personal Computer/VMware/champ/champ.vmx""')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.11907.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.11907.sh
Debug: mapEntity(): Running function: printState
Entering printState(champ) with environment state=off, acstate=inactive, exstate=inactive, vmstate=inactive, svstate=unset, svrunning=, svlistening=, host=zildjian, type=guest, osmt=rhel6, acmt=ssh, exmt=ssh, svmt=none, vrmt=vmw, addr=10.10.12.11, port=none, user=build, admin=root, members=host,zildjian,win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw
Debug: doFunction(): Function printState returned status 4
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.57486
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.57486
Entering mapEntryPoint(raaf-build checkState,printState)
Entering dynamicHandler(raaf-build)
Debug: dynamicHandler(): Not a dynamic group: raaf-build, passing to parseEntry
Entering parseEntry(raaf-build) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(raaf-build /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for raaf-build with value group
Entering capsFirst(group)
Entering parseGroup(raaf-build)
Entering tokenReader(setVars raaf-build members) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=group
raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken)
Debug: tokenReader(): Using previously set entry for raaf-build
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Looking up members for raaf-build at position 3
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Writing variable "members" with value: "thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken" to /home/rubin/.session/tmp/session.tokens.57486
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57486
Debug: mapEntryPoint(): Received a group, passing on to mapGroup
Entering mapGroup(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken checkState,printState) with environment mode=serial
Debug: mapGroup(): Group list is: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken
Debug: mapGroup(): Target state is: on
Debug: mapGroup(): Recursing thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken to mapEntryPoint
Entering mapEntryPoint(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState)
Entering dynamicHandler(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken)
Debug: dynamicHandler(): Not a dynamic group: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken, passing to parseEntry
Entering parseEntry(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,/home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Entering tokenValidator(type)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment type=, acmt=, exmt=
Debug: doFunction(): Function checkState returned status 1
Debug: mapEntity(): Running function: printState
Entering printState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment state=unset, acstate=unset, exstate=unset, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=, type=, osmt=, acmt=, exmt=, svmt=, vrmt=, addr=, port=, user=, admin=, members=thirty
regan
champ
septim
suzan
sizzle
umaril
uncle
usher
dagon
ogami
friday
nichimen
mirai
roger
wodan
seven
marcus
eight
lucas
feline
nihon
orient
drake
shuriken
strider
andy
bill
harkon
amdahl
flint
aiken
Debug: doFunction(): Function printState returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.57624
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.57624
Entering mapEntryPoint(raaf-build checkState,printState)
Entering dynamicHandler(raaf-build)
Debug: dynamicHandler(): Not a dynamic group: raaf-build, passing to parseEntry
Entering parseEntry(raaf-build) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(raaf-build /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for raaf-build with value group
Entering capsFirst(group)
Entering parseGroup(raaf-build)
Entering tokenReader(setVars raaf-build members) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=group
raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken)
Debug: tokenReader(): Using previously set entry for raaf-build
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Looking up members for raaf-build at position 3
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Writing variable "members" with value: "thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken" to /home/rubin/.session/tmp/session.tokens.57624
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57624
Debug: mapEntryPoint(): Received a group, passing on to mapGroup
Entering mapGroup(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken checkState,printState) with environment mode=serial
Debug: mapGroup(): Group list is: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken
Debug: mapGroup(): Target state is: on
Debug: mapGroup(): Recursing thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken to mapEntryPoint
Entering mapEntryPoint(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState)
Entering dynamicHandler(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken)
Debug: dynamicHandler(): Not a dynamic group: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken, passing to parseEntry
Entering parseEntry(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,/home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Entering tokenValidator(type)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment type=, acmt=, exmt=
Debug: doFunction(): Function checkState returned status 1
Debug: mapEntity(): Running function: printState
Entering printState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment state=unset, acstate=unset, exstate=unset, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=, type=, osmt=, acmt=, exmt=, svmt=, vrmt=, addr=, port=, user=, admin=, members=thirty
regan
champ
septim
suzan
sizzle
umaril
uncle
usher
dagon
ogami
friday
nichimen
mirai
roger
wodan
seven
marcus
eight
lucas
feline
nihon
orient
drake
shuriken
strider
andy
bill
harkon
amdahl
flint
aiken
Debug: doFunction(): Function printState returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.57720
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.57720
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.57720 to /home/rubin/.session/tmp/session.debug.parameters.57720
Entering mapEntryPoint(raaf-build checkState,printState)
Entering dynamicHandler(raaf-build)
Debug: dynamicHandler(): Not a dynamic group: raaf-build, passing to parseEntry
Entering parseEntry(raaf-build) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(raaf-build /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for raaf-build with value group
Entering capsFirst(group)
Entering parseGroup(raaf-build)
Entering tokenReader(setVars raaf-build members) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=group
raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken)
Debug: tokenReader(): Using previously set entry for raaf-build
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Looking up members for raaf-build at position 3
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Writing variable "members" with value: "thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken" to /home/rubin/.session/tmp/session.tokens.57720
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57720
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57720 to /home/rubin/.session/tmp/session.debug.tokens.57720
Debug: mapEntryPoint(): Received a group, passing on to mapGroup
Entering mapGroup(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken checkState,printState) with environment mode=serial
Debug: mapGroup(): Group list is: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken
Debug: mapGroup(): Target state is: on
Debug: mapGroup(): Recursing thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken to mapEntryPoint
Entering mapEntryPoint(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState)
Entering dynamicHandler(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken)
Debug: dynamicHandler(): Not a dynamic group: thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken, passing to parseEntry
Entering parseEntry(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,/home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Entering tokenValidator(type)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment type=, acmt=, exmt=
Debug: doFunction(): Function checkState returned status 1
Debug: mapEntity(): Running function: printState
Entering printState(thirty regan champ septim suzan sizzle umaril uncle usher dagon ogami friday nichimen mirai roger wodan seven marcus eight lucas feline nihon orient drake shuriken strider andy bill harkon amdahl flint aiken) with environment state=unset, acstate=unset, exstate=unset, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=, type=, osmt=, acmt=, exmt=, svmt=, vrmt=, addr=, port=, user=, admin=, members=thirty
regan
champ
septim
suzan
sizzle
umaril
uncle
usher
dagon
ogami
friday
nichimen
mirai
roger
wodan
seven
marcus
eight
lucas
feline
nihon
orient
drake
shuriken
strider
andy
bill
harkon
amdahl
flint
aiken
Debug: doFunction(): Function printState returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Environment values not set but agent is running, inspecting agent
Debug: handleSshPrivateKeys(): I'm using  lsof to do this
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.57824
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.57824
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.57824 to /home/rubin/.session/tmp/session.debug.parameters.57824
Entering mapEntryPoint(raaf-build checkState,printState)
Entering dynamicHandler(raaf-build)
Debug: dynamicHandler(): Not a dynamic group: raaf-build, passing to parseEntry
Entering parseEntry(raaf-build) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(raaf-build /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for raaf-build with value group
Entering capsFirst(group)
Entering parseGroup(raaf-build)
Entering tokenReader(setVars raaf-build members) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=group
raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken)
Debug: tokenReader(): Using previously set entry for raaf-build
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Looking up members for raaf-build at position 3
Entering cutParentheses(group raaf-build(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken))
Debug: tokenReader(): Writing variable "members" with value: "thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Debug: mapEntryPoint(): Received a group, passing on to mapGroup
Entering mapGroup(thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken checkState,printState) with environment mode=serial
Debug: mapGroup(): Group list is: thirty,regan,champ,septim,suzan,sizzle,umaril,uncle,usher,dagon,ogami,friday,nichimen,mirai,roger,wodan,seven,marcus,eight,lucas,feline,nihon,orient,drake,shuriken,strider,andy,bill,harkon,amdahl,flint,aiken
Debug: mapGroup(): Target state is: on
Debug: mapGroup(): Recursing thirty to mapEntryPoint
Entering mapEntryPoint(thirty,checkState,printState)
Entering dynamicHandler(thirty)
Debug: dynamicHandler(): Not a dynamic group: thirty, passing to parseEntry
Entering parseEntry(thirty) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(thirty,/home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for thirty with value guest
Entering capsFirst(guest)
Entering parseGuest(thirty)
Entering tokenReader(setVars,thirty,osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
thirty(rhel6,ssh,ssh,root,root,172.17.1.49,zildjian)
Debug: tokenReader(): Using previously set entry for thirty
Entering cutParentheses(guest thirty(rhel6,ssh,ssh,root,root,172.17.1.49,zildjian))
Debug: tokenReader(): Looking up osmt for thirty at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "rhel6" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up acmt for thirty at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up exmt for thirty at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up user for thirty at position 6
Debug: tokenReader(): Writing variable "user" with value: "root" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up admin for thirty at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up addr for thirty at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.49" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up host for thirty at position 9
Debug: tokenReader(): Writing variable "host" with value: "zildjian" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Entering tokenReader(setVars,zildjian,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
thirty(rhel6,ssh,ssh,root,root,172.17.1.49,zildjian)
Debug: tokenReader(): Reading entry for zildjian
Entering entryReader(zildjian,/home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for thirty with value guest
Debug: tokenValidator(): Verifying osmt for thirty with value rhel6
Debug: tokenValidator(): Verifying acmt for thirty with value ssh
Debug: tokenValidator(): Verifying exmt for thirty with value ssh
Debug: tokenValidator(): Verifying user for thirty with value root
Debug: tokenValidator(): Verifying admin for thirty with value root
Debug: tokenValidator(): Verifying addr for thirty with value 172.17.1.49
Entering checkNameOrAddress(172.17.1.49)
Debug: tokenValidator(): Verifying vrmt for thirty with value vmw
Debug: tokenValidator(): Verifying port for thirty with value none
Debug: tokenValidator(): Verifying svmt for thirty with value none
Entering isLoopback(172.17.1.49)
Entering isLocal(thirty)
Entering osGlobals(rhel6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(thirty,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(thirty) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=thirty, addr=172.17.1.49, acstate=unset, terminal=screen
Entering printPortState(172.17.1.49 22) with environment timeout=1501
Entering isLoopback(172.17.1.49)
Entering isLocal(thirty)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.49
Debug: printPortState(): Port 22 on 172.17.1.49 is closed
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering vmwVirtHandler(state) with environment host=zildjian, name=thirty, state=unset, vrmt=vmw, memsize=, destroy=false
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ "C:/Program Files (x86)/VMware/VMware Workstation/vmrun" list)
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c ""C:/Program Files (x86)/VMware/VMware Workstation/vmrun" list"' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.57824.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.57824.sh
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.57824
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.57824 to /home/rubin/.session/tmp/session.debug.tokens.57824
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Entering checkState() with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ "C:/Program Files (x86)/VMware/VMware Workstation/vmrun" listSnapshots "D:/Systems/Personal Computer/VMware/thirty/thirty.vmx")
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c ""C:/Program Files (x86)/VMware/VMware Workstation/vmrun" listSnapshots "D:/Systems/Personal Computer/VMware/thirty/thirty.vmx""' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.57824.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.57824.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
resilient
mode, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.4407
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.4407
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.4407 to /home/rubin/.session/tmp/session.debug.parameters.4407
Entering mapEntryPoint(esxio,zildjian,hewlett,sparc,watson checkState,printState)
Entering dynamicHandler(esxio,zildjian,hewlett,sparc,watson)
Debug: dynamicHandler(): Dynamic group: comma detected on entity specification (esxio,zildjian,hewlett,sparc,watson), initializing
Debug: mapEntryPoint(): Received a group, passing on to mapGroup
Entering mapGroup(esxio,zildjian,hewlett,parc,watson checkState,printState) with environment mode=serial
Debug: mapGroup(): Group list is: esxio,zildjian,hewlett,parc,watson
Debug: mapGroup(): Target state is: on
Debug: mapGroup(): Recursing esxio to mapEntryPoint
Entering mapEntryPoint(esxio,checkState,printState)
Entering dynamicHandler(esxio)
Debug: dynamicHandler(): Not a dynamic group: esxio, passing to parseEntry
Entering parseEntry(esxio) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(esxio,/home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for esxio with value host
Entering capsFirst(host)
Entering parseHost(esxio)
Entering tokenReader(setVars,esxio,osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx)
Debug: tokenReader(): Using previously set entry for esxio
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up osmt for esxio at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "esxi4" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up acmt for esxio at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up exmt for esxio at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up user for esxio at position 6
Debug: tokenReader(): Writing variable "user" with value: "root" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up admin for esxio at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up addr for esxio at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.4" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.4407 to /home/rubin/.session/tmp/session.debug.tokens.4407
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for esxio with value host
Debug: tokenValidator(): Verifying osmt for esxio with value esxi4
Debug: tokenValidator(): Verifying acmt for esxio with value ssh
Debug: tokenValidator(): Verifying exmt for esxio with value ssh
Debug: tokenValidator(): Verifying user for esxio with value root
Debug: tokenValidator(): Verifying admin for esxio with value root
Debug: tokenValidator(): Verifying addr for esxio with value 172.17.1.4
Entering checkNameOrAddress(172.17.1.4)
Debug: tokenValidator(): Verifying vrmt for esxio with value esx
Debug: tokenValidator(): Verifying port for esxio with value none
Debug: tokenValidator(): Verifying svmt for esxio with value none
Entering isLoopback(172.17.1.4)
Entering isLocal(esxio)
Entering osGlobals(esxi4)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(esxio,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(esxio) with environment type=host, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=esxio, addr=172.17.1.4, acstate=unset, terminal=screen
Entering printPortState(172.17.1.4 22) with environment timeout=1501
Entering isLoopback(172.17.1.4)
Entering isLocal(esxio)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.4
Debug: printPortState(): Port 22 on 172.17.1.4 is open
Debug: mapEntity(): Running function: printState
Entering printState(esxio) with environment state=on, acstate=active, exstate=active, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=none, type=host, osmt=esxi4, acmt=ssh, exmt=ssh, svmt=none, vrmt=esx, addr=172.17.1.4, port=none, user=root, admin=root, members=host,esxio,esxi4,ssh,ssh,root,root,172.17.1.4,esx
Debug: mapGroup(): Recursing zildjian to mapEntryPoint
Entering mapEntryPoint(zildjian,checkState,printState)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian,/home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars,zildjian,osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.4407 to /home/rubin/.session/tmp/session.debug.tokens.4407
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: printState
Entering printState(zildjian) with environment state=on, acstate=active, exstate=active, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=none, type=host, osmt=win8, acmt=rdp, exmt=smb, svmt=none, vrmt=vmw, addr=172.17.1.40, port=none, user=rubin@xs4all.nl, admin=admin, members=host,zildjian,win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw
Debug: mapGroup(): Recursing hewlett to mapEntryPoint
Entering mapEntryPoint(hewlett,checkState,printState)
Entering dynamicHandler(hewlett)
Debug: dynamicHandler(): Not a dynamic group: hewlett, passing to parseEntry
Entering parseEntry(hewlett) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(hewlett,/home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for hewlett with value host
Entering capsFirst(host)
Entering parseHost(hewlett)
Entering tokenReader(setVars,hewlett,osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
hewlett(hpux1131,ssh,ssh,root,root,172.17.1.27,hpvm)
Debug: tokenReader(): Using previously set entry for hewlett
Entering cutParentheses(host hewlett(hpux1131,ssh,ssh,root,root,172.17.1.27,hpvm))
Debug: tokenReader(): Looking up osmt for hewlett at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "hpux1131" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up acmt for hewlett at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up exmt for hewlett at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up user for hewlett at position 6
Debug: tokenReader(): Writing variable "user" with value: "root" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up admin for hewlett at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up addr for hewlett at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.27" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up vrmt for hewlett at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "hpvm" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.4407 to /home/rubin/.session/tmp/session.debug.tokens.4407
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for hewlett with value host
Debug: tokenValidator(): Verifying osmt for hewlett with value hpux1131
Debug: tokenValidator(): Verifying acmt for hewlett with value ssh
Debug: tokenValidator(): Verifying exmt for hewlett with value ssh
Debug: tokenValidator(): Verifying user for hewlett with value root
Debug: tokenValidator(): Verifying admin for hewlett with value root
Debug: tokenValidator(): Verifying addr for hewlett with value 172.17.1.27
Entering checkNameOrAddress(172.17.1.27)
Debug: tokenValidator(): Verifying vrmt for hewlett with value hpvm
Debug: tokenValidator(): Verifying port for hewlett with value none
Debug: tokenValidator(): Verifying svmt for hewlett with value none
Entering isLoopback(172.17.1.27)
Entering isLocal(hewlett)
Entering osGlobals(hpux1131)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(hewlett,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(hewlett) with environment type=host, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=hewlett, addr=172.17.1.27, acstate=unset, terminal=screen
Entering printPortState(172.17.1.27 22) with environment timeout=1501
Entering isLoopback(172.17.1.27)
Entering isLocal(hewlett)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.27
Debug: printPortState(): Port 22 on 172.17.1.27 is closed
Entering printPingState(172.17.1.27)
Entering isLoopback(172.17.1.27)
Entering isLocal(hewlett)
Debug: printPingState(): Command is:  nmap -sP 172.17.1.27
Debug: printPingState(): 172.17.1.27 is unreachable
Debug: mapEntity(): Running function: printState
Entering printState(hewlett) with environment state=unreachable, acstate=inactive, exstate=inactive, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=none, type=host, osmt=hpux1131, acmt=ssh, exmt=ssh, svmt=none, vrmt=hpvm, addr=172.17.1.27, port=none, user=root, admin=root, members=host,hewlett,hpux1131,ssh,ssh,root,root,172.17.1.27,hpvm
Debug: doFunction(): Function printState returned status 1
Debug: mapGroup(): Recursing parc to mapEntryPoint
Entering mapEntryPoint(parc,checkState,printState)
Entering dynamicHandler(parc)
Debug: dynamicHandler(): Not a dynamic group: parc, passing to parseEntry
Entering parseEntry(parc) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(parc,/home/rubin/.session/tmp/session.conf.active)
Debug: entryReader(): Entry returned empty, see if file was opened and retry when closed + available
Entering tokenValidator(type)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(parc,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(parc) with environment type=, acmt=ssh, exmt=ssh
Debug: doFunction(): Function checkState returned status 1
Debug: mapEntity(): Running function: printState
Entering printState(parc) with environment state=unset, acstate=unset, exstate=unset, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=none, type=, osmt=hpux1131, acmt=ssh, exmt=ssh, svmt=none, vrmt=hpvm, addr=172.17.1.27, port=none, user=root, admin=root, members=host,hewlett,hpux1131,ssh,ssh,root,root,172.17.1.27,hpvm
Debug: doFunction(): Function printState returned status 1
Debug: mapGroup(): Recursing watson to mapEntryPoint
Entering mapEntryPoint(watson,checkState,printState)
Entering dynamicHandler(watson)
Debug: dynamicHandler(): Not a dynamic group: watson, passing to parseEntry
Entering parseEntry(watson) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(watson,/home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for watson with value host
Entering capsFirst(host)
Entering parseHost(watson)
Entering tokenReader(setVars,watson,osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
watson(aix6,ssh,ssh,padmin,padmin,172.17.1.29,pvm)
Debug: tokenReader(): Using previously set entry for watson
Entering cutParentheses(host watson(aix6,ssh,ssh,padmin,padmin,172.17.1.29,pvm))
Debug: tokenReader(): Looking up osmt for watson at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "aix6" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up acmt for watson at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up exmt for watson at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up user for watson at position 6
Debug: tokenReader(): Writing variable "user" with value: "padmin" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up admin for watson at position 7
Debug: tokenReader(): Writing variable "admin" with value: "padmin" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up addr for watson at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.29" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Looking up vrmt for watson at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "pvm" to /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.4407
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.4407 to /home/rubin/.session/tmp/session.debug.tokens.4407
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for watson with value host
Debug: tokenValidator(): Verifying osmt for watson with value aix6
Debug: tokenValidator(): Verifying acmt for watson with value ssh
Debug: tokenValidator(): Verifying exmt for watson with value ssh
Debug: tokenValidator(): Verifying user for watson with value padmin
Debug: tokenValidator(): Verifying admin for watson with value padmin
Debug: tokenValidator(): Verifying addr for watson with value 172.17.1.29
Entering checkNameOrAddress(172.17.1.29)
Debug: tokenValidator(): Verifying vrmt for watson with value pvm
Debug: tokenValidator(): Verifying port for watson with value none
Debug: tokenValidator(): Verifying svmt for watson with value none
Entering isLoopback(172.17.1.29)
Entering isLocal(watson)
Entering osGlobals(aix6)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(watson,checkState,printState) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(watson) with environment type=host, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=watson, addr=172.17.1.29, acstate=unset, terminal=screen
Entering printPortState(172.17.1.29 22) with environment timeout=1501
Entering isLoopback(172.17.1.29)
Entering isLocal(watson)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.29
Debug: printPortState(): Port 22 on 172.17.1.29 is closed
Entering printPingState(172.17.1.29)
Entering isLoopback(172.17.1.29)
Entering isLocal(watson)
Debug: printPingState(): Command is:  nmap -sP 172.17.1.29
Debug: printPingState(): 172.17.1.29 is unreachable
Debug: mapEntity(): Running function: printState
Entering printState(watson) with environment state=unreachable, acstate=inactive, exstate=inactive, vmstate=unset, svstate=unset, svrunning=, svlistening=, host=none, type=host, osmt=aix6, acmt=ssh, exmt=ssh, svmt=none, vrmt=pvm, addr=172.17.1.29, port=none, user=padmin, admin=padmin, members=host,watson,aix6,ssh,ssh,padmin,padmin,172.17.1.29,pvm
Debug: doFunction(): Function printState returned status 1
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ping thirty --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ping thirty 1
Debug: parseParameters(): Writing variable "command" with value: "ping thirty" to /home/rubin/.session/tmp/session.parameters.5785
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.5785
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.5785
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.5785 to /home/rubin/.session/tmp/session.debug.parameters.5785
Entering mapEntryPoint(zildjian checkState,runAs)
Entering dynamicHandler(zildjian)
Debug: dynamicHandler(): Not a dynamic group: zildjian, passing to parseEntry
Entering parseEntry(zildjian) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for zildjian with value host
Entering capsFirst(host)
Entering parseHost(zildjian)
Entering tokenReader(setVars zildjian osmt,acmt,exmt,user,admin,addr,vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=host
zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw)
Debug: tokenReader(): Using previously set entry for zildjian
Entering cutParentheses(host zildjian(win8,rdp,smb,rubin@xs4all.nl,admin,172.17.1.40,vmw))
Debug: tokenReader(): Looking up osmt for zildjian at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up acmt for zildjian at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up exmt for zildjian at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up user for zildjian at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin@xs4all.nl" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up admin for zildjian at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up addr for zildjian at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.40" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "vmw" to /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.5785
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.5785 to /home/rubin/.session/tmp/session.debug.tokens.5785
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,vrmt,port,host,svmt)
Debug: tokenValidator(): Verifying type for zildjian with value host
Debug: tokenValidator(): Verifying osmt for zildjian with value win8
Debug: tokenValidator(): Verifying acmt for zildjian with value rdp
Debug: tokenValidator(): Verifying exmt for zildjian with value smb
Debug: tokenValidator(): Verifying user for zildjian with value rubin@xs4all.nl
Debug: tokenValidator(): Verifying admin for zildjian with value admin
Debug: tokenValidator(): Verifying addr for zildjian with value 172.17.1.40
Entering checkNameOrAddress(172.17.1.40)
Debug: tokenValidator(): Verifying vrmt for zildjian with value vmw
Debug: tokenValidator(): Verifying port for zildjian with value none
Debug: tokenValidator(): Verifying svmt for zildjian with value none
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(zildjian checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(zildjian) with environment type=host, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=zildjian, addr=172.17.1.40, acstate=unset, desktop=rdesktop
Entering printPortState(172.17.1.40 3389) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.40
Debug: printPortState(): Port 3389 on 172.17.1.40 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.40 445) with environment timeout=1501
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.40
Debug: printPortState(): Port 445 on 172.17.1.40 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: runAs
Entering runAs(zildjian) with environment execute=true, exmt=smb, runastype=user
Entering smbExecHandler(runasuser)
Entering isLoopback(172.17.1.40)
Entering isLocal(zildjian)
Debug: smbExecHandler(): Attempting to execute user-level command remotely (on zildjian)
Entering winexeTellCommandWriter(172.17.1.40 rubin@xs4all.nl ~w1nD0Ws~ )
Entering viaScript(winexe -U 'rubin@xs4all.nl%~w1nD0Ws~' //172.17.1.40 'cmd.exe /c ""' 2> /dev/null)
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.zildjian.5785.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.zildjian.5785.sh
Debug: doFunction(): Function runAs returned status 137
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ping thirty --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ping thirty 1
Debug: parseParameters(): Writing variable "command" with value: "ping thirty" to /home/rubin/.session/tmp/session.parameters.5988
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.5988
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.5988
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.5988 to /home/rubin/.session/tmp/session.debug.parameters.5988
Entering mapEntryPoint(plato checkState,runAs)
Entering dynamicHandler(plato)
Debug: dynamicHandler(): Not a dynamic group: plato, passing to parseEntry
Entering parseEntry(plato) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(plato /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for plato with value guest
Entering capsFirst(guest)
Entering parseGuest(plato)
Entering tokenReader(setVars plato osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Using previously set entry for plato
Entering cutParentheses(guest plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio))
Debug: tokenReader(): Looking up osmt for plato at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up acmt for plato at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up exmt for plato at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up user for plato at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up admin for plato at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up addr for plato at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.13" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Looking up host for plato at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.5988 to /home/rubin/.session/tmp/session.debug.tokens.5988
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.5988
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.5988 to /home/rubin/.session/tmp/session.debug.tokens.5988
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for plato with value guest
Debug: tokenValidator(): Verifying osmt for plato with value ubuntu12
Debug: tokenValidator(): Verifying acmt for plato with value ssh
Debug: tokenValidator(): Verifying exmt for plato with value ssh
Debug: tokenValidator(): Verifying user for plato with value rubin
Debug: tokenValidator(): Verifying admin for plato with value root
Debug: tokenValidator(): Verifying addr for plato with value 172.17.1.13
Entering checkNameOrAddress(172.17.1.13)
Debug: tokenValidator(): Verifying vrmt for plato with value esx
Debug: tokenValidator(): Verifying port for plato with value none
Debug: tokenValidator(): Verifying svmt for plato with value none
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(plato checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(plato) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=plato, addr=172.17.1.13, acstate=unset, terminal=screen
Entering printPortState(172.17.1.13 22) with environment timeout=1501
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.13
Debug: printPortState(): Port 22 on 172.17.1.13 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(plato) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.13, name=plato, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ping
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on plato)
Entering sshTellCommandWriter(172.17.1.13 rubin ping)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.13' 'ping')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.plato.5988.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.plato.5988.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ping thirty --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ping thirty 1
Debug: parseParameters(): Writing variable "command" with value: "ping thirty" to /home/rubin/.session/tmp/session.parameters.6128
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.6128
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.6128
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.6128 to /home/rubin/.session/tmp/session.debug.parameters.6128
Entering mapEntryPoint(plato checkState,runAs)
Entering dynamicHandler(plato)
Debug: dynamicHandler(): Not a dynamic group: plato, passing to parseEntry
Entering parseEntry(plato) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(plato /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for plato with value guest
Entering capsFirst(guest)
Entering parseGuest(plato)
Entering tokenReader(setVars plato osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Using previously set entry for plato
Entering cutParentheses(guest plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio))
Debug: tokenReader(): Looking up osmt for plato at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up acmt for plato at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up exmt for plato at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up user for plato at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up admin for plato at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up addr for plato at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.13" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Looking up host for plato at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6128 to /home/rubin/.session/tmp/session.debug.tokens.6128
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6128
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6128 to /home/rubin/.session/tmp/session.debug.tokens.6128
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for plato with value guest
Debug: tokenValidator(): Verifying osmt for plato with value ubuntu12
Debug: tokenValidator(): Verifying acmt for plato with value ssh
Debug: tokenValidator(): Verifying exmt for plato with value ssh
Debug: tokenValidator(): Verifying user for plato with value rubin
Debug: tokenValidator(): Verifying admin for plato with value root
Debug: tokenValidator(): Verifying addr for plato with value 172.17.1.13
Entering checkNameOrAddress(172.17.1.13)
Debug: tokenValidator(): Verifying vrmt for plato with value esx
Debug: tokenValidator(): Verifying port for plato with value none
Debug: tokenValidator(): Verifying svmt for plato with value none
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(plato checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(plato) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=plato, addr=172.17.1.13, acstate=unset, terminal=screen
Entering printPortState(172.17.1.13 22) with environment timeout=1501
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.13
Debug: printPortState(): Port 22 on 172.17.1.13 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(plato) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.13, name=plato, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ping
thirty
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on plato)
Entering sshTellCommandWriter(172.17.1.13 rubin ping thirty)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.13' 'ping thirty')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.plato.6128.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.plato.6128.sh
Debug: doFunction(): Function runAs returned status 255
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l /data/raaf-repo/private/software/ --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l /data/raaf-repo/private/software/ 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l /data/raaf-repo/private/software/" to /home/rubin/.session/tmp/session.parameters.6265
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.6265
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.6265
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.6265 to /home/rubin/.session/tmp/session.debug.parameters.6265
Entering mapEntryPoint(plato checkState,runAs)
Entering dynamicHandler(plato)
Debug: dynamicHandler(): Not a dynamic group: plato, passing to parseEntry
Entering parseEntry(plato) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(plato /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for plato with value guest
Entering capsFirst(guest)
Entering parseGuest(plato)
Entering tokenReader(setVars plato osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Using previously set entry for plato
Entering cutParentheses(guest plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio))
Debug: tokenReader(): Looking up osmt for plato at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up acmt for plato at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up exmt for plato at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up user for plato at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up admin for plato at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up addr for plato at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.13" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Looking up host for plato at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6265 to /home/rubin/.session/tmp/session.debug.tokens.6265
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6265
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6265 to /home/rubin/.session/tmp/session.debug.tokens.6265
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for plato with value guest
Debug: tokenValidator(): Verifying osmt for plato with value ubuntu12
Debug: tokenValidator(): Verifying acmt for plato with value ssh
Debug: tokenValidator(): Verifying exmt for plato with value ssh
Debug: tokenValidator(): Verifying user for plato with value rubin
Debug: tokenValidator(): Verifying admin for plato with value root
Debug: tokenValidator(): Verifying addr for plato with value 172.17.1.13
Entering checkNameOrAddress(172.17.1.13)
Debug: tokenValidator(): Verifying vrmt for plato with value esx
Debug: tokenValidator(): Verifying port for plato with value none
Debug: tokenValidator(): Verifying svmt for plato with value none
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(plato checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(plato) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=plato, addr=172.17.1.13, acstate=unset, terminal=screen
Entering printPortState(172.17.1.13 22) with environment timeout=1501
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.13
Debug: printPortState(): Port 22 on 172.17.1.13 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(plato) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.13, name=plato, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ls
-l
/data/raaf-repo/private/software/
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on plato)
Entering sshTellCommandWriter(172.17.1.13 rubin ls -l /data/raaf-repo/private/software/)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.13' 'ls -l /data/raaf-repo/private/software/')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.plato.6265.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.plato.6265.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l /data --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l /data 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l /data" to /home/rubin/.session/tmp/session.parameters.6400
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.6400
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.6400
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.6400 to /home/rubin/.session/tmp/session.debug.parameters.6400
Entering mapEntryPoint(plato checkState,runAs)
Entering dynamicHandler(plato)
Debug: dynamicHandler(): Not a dynamic group: plato, passing to parseEntry
Entering parseEntry(plato) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(plato /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for plato with value guest
Entering capsFirst(guest)
Entering parseGuest(plato)
Entering tokenReader(setVars plato osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Using previously set entry for plato
Entering cutParentheses(guest plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio))
Debug: tokenReader(): Looking up osmt for plato at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up acmt for plato at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up exmt for plato at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up user for plato at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up admin for plato at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up addr for plato at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.13" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Looking up host for plato at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6400 to /home/rubin/.session/tmp/session.debug.tokens.6400
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
plato(ubuntu12,ssh,ssh,rubin,root,172.17.1.13,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6400
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6400 to /home/rubin/.session/tmp/session.debug.tokens.6400
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for plato with value guest
Debug: tokenValidator(): Verifying osmt for plato with value ubuntu12
Debug: tokenValidator(): Verifying acmt for plato with value ssh
Debug: tokenValidator(): Verifying exmt for plato with value ssh
Debug: tokenValidator(): Verifying user for plato with value rubin
Debug: tokenValidator(): Verifying admin for plato with value root
Debug: tokenValidator(): Verifying addr for plato with value 172.17.1.13
Entering checkNameOrAddress(172.17.1.13)
Debug: tokenValidator(): Verifying vrmt for plato with value esx
Debug: tokenValidator(): Verifying port for plato with value none
Debug: tokenValidator(): Verifying svmt for plato with value none
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(plato checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(plato) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=plato, addr=172.17.1.13, acstate=unset, terminal=screen
Entering printPortState(172.17.1.13 22) with environment timeout=1501
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.13
Debug: printPortState(): Port 22 on 172.17.1.13 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(plato) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.13, name=plato, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ls
-l
/data
Entering isLoopback(172.17.1.13)
Entering isLocal(plato)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on plato)
Entering sshTellCommandWriter(172.17.1.13 rubin ls -l /data)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.13' 'ls -l /data')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.plato.6400.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.plato.6400.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l /data/raaf-repo/private/software/ --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l /data/raaf-repo/private/software/ 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l /data/raaf-repo/private/software/" to /home/rubin/.session/tmp/session.parameters.6664
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.6664
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.6664
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.6664 to /home/rubin/.session/tmp/session.debug.parameters.6664
Entering mapEntryPoint(atlas checkState,runAs)
Entering dynamicHandler(atlas)
Debug: dynamicHandler(): Not a dynamic group: atlas, passing to parseEntry
Entering parseEntry(atlas) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(atlas /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for atlas with value guest
Entering capsFirst(guest)
Entering parseGuest(atlas)
Entering tokenReader(setVars atlas osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Using previously set entry for atlas
Entering cutParentheses(guest atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio))
Debug: tokenReader(): Looking up osmt for atlas at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up acmt for atlas at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up exmt for atlas at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up user for atlas at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up admin for atlas at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up addr for atlas at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.5" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Looking up host for atlas at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6664 to /home/rubin/.session/tmp/session.debug.tokens.6664
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6664
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6664 to /home/rubin/.session/tmp/session.debug.tokens.6664
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for atlas with value guest
Debug: tokenValidator(): Verifying osmt for atlas with value ubuntu12
Debug: tokenValidator(): Verifying acmt for atlas with value ssh
Debug: tokenValidator(): Verifying exmt for atlas with value ssh
Debug: tokenValidator(): Verifying user for atlas with value rubin
Debug: tokenValidator(): Verifying admin for atlas with value root
Debug: tokenValidator(): Verifying addr for atlas with value 172.17.1.5
Entering checkNameOrAddress(172.17.1.5)
Debug: tokenValidator(): Verifying vrmt for atlas with value esx
Debug: tokenValidator(): Verifying port for atlas with value none
Debug: tokenValidator(): Verifying svmt for atlas with value none
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(atlas checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(atlas) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=atlas, addr=172.17.1.5, acstate=unset, terminal=screen
Entering printPortState(172.17.1.5 22) with environment timeout=1501
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.5
Debug: printPortState(): Port 22 on 172.17.1.5 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(atlas) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.5, name=atlas, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ls
-l
/data/raaf-repo/private/software/
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on atlas)
Entering sshTellCommandWriter(172.17.1.5 rubin ls -l /data/raaf-repo/private/software/)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.5' 'ls -l /data/raaf-repo/private/software/')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.atlas.6664.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.atlas.6664.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l "/data/raaf-repo/private/software/SystemRescueCd 4"" to /home/rubin/.session/tmp/session.parameters.6908
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.6908
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.6908
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.6908 to /home/rubin/.session/tmp/session.debug.parameters.6908
Entering mapEntryPoint(atlas checkState,runAs)
Entering dynamicHandler(atlas)
Debug: dynamicHandler(): Not a dynamic group: atlas, passing to parseEntry
Entering parseEntry(atlas) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(atlas /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for atlas with value guest
Entering capsFirst(guest)
Entering parseGuest(atlas)
Entering tokenReader(setVars atlas osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Using previously set entry for atlas
Entering cutParentheses(guest atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio))
Debug: tokenReader(): Looking up osmt for atlas at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up acmt for atlas at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up exmt for atlas at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up user for atlas at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up admin for atlas at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up addr for atlas at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.5" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Looking up host for atlas at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6908 to /home/rubin/.session/tmp/session.debug.tokens.6908
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.6908
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.6908 to /home/rubin/.session/tmp/session.debug.tokens.6908
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for atlas with value guest
Debug: tokenValidator(): Verifying osmt for atlas with value ubuntu12
Debug: tokenValidator(): Verifying acmt for atlas with value ssh
Debug: tokenValidator(): Verifying exmt for atlas with value ssh
Debug: tokenValidator(): Verifying user for atlas with value rubin
Debug: tokenValidator(): Verifying admin for atlas with value root
Debug: tokenValidator(): Verifying addr for atlas with value 172.17.1.5
Entering checkNameOrAddress(172.17.1.5)
Debug: tokenValidator(): Verifying vrmt for atlas with value esx
Debug: tokenValidator(): Verifying port for atlas with value none
Debug: tokenValidator(): Verifying svmt for atlas with value none
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(atlas checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(atlas) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=atlas, addr=172.17.1.5, acstate=unset, terminal=screen
Entering printPortState(172.17.1.5 22) with environment timeout=1501
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.5
Debug: printPortState(): Port 22 on 172.17.1.5 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(atlas) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.5, name=atlas, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ls
-l
/data/raaf-repo/private/software/SystemRescueCd
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on atlas)
Entering sshTellCommandWriter(172.17.1.5 rubin ls -l /data/raaf-repo/private/software/SystemRescueCd)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.5' 'ls -l /data/raaf-repo/private/software/SystemRescueCd')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.atlas.6908.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.atlas.6908.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l "/data/raaf-repo/private/software/SystemRescueCd 4"" to /home/rubin/.session/tmp/session.parameters.7047
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.7047
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.7047
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.7047 to /home/rubin/.session/tmp/session.debug.parameters.7047
Entering mapEntryPoint(atlas checkState,runAs)
Entering dynamicHandler(atlas)
Debug: dynamicHandler(): Not a dynamic group: atlas, passing to parseEntry
Entering parseEntry(atlas) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(atlas /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for atlas with value guest
Entering capsFirst(guest)
Entering parseGuest(atlas)
Entering tokenReader(setVars atlas osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Using previously set entry for atlas
Entering cutParentheses(guest atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio))
Debug: tokenReader(): Looking up osmt for atlas at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up acmt for atlas at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up exmt for atlas at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up user for atlas at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up admin for atlas at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up addr for atlas at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.5" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Looking up host for atlas at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.7047 to /home/rubin/.session/tmp/session.debug.tokens.7047
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.7047
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.7047 to /home/rubin/.session/tmp/session.debug.tokens.7047
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for atlas with value guest
Debug: tokenValidator(): Verifying osmt for atlas with value ubuntu12
Debug: tokenValidator(): Verifying acmt for atlas with value ssh
Debug: tokenValidator(): Verifying exmt for atlas with value ssh
Debug: tokenValidator(): Verifying user for atlas with value rubin
Debug: tokenValidator(): Verifying admin for atlas with value root
Debug: tokenValidator(): Verifying addr for atlas with value 172.17.1.5
Entering checkNameOrAddress(172.17.1.5)
Debug: tokenValidator(): Verifying vrmt for atlas with value esx
Debug: tokenValidator(): Verifying port for atlas with value none
Debug: tokenValidator(): Verifying svmt for atlas with value none
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(atlas checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(atlas) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=atlas, addr=172.17.1.5, acstate=unset, terminal=screen
Entering printPortState(172.17.1.5 22) with environment timeout=1501
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.5
Debug: printPortState(): Port 22 on 172.17.1.5 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(atlas) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.5, name=atlas, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command='ls
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on atlas)
Entering sshTellCommandWriter(172.17.1.5 rubin 'ls)
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.5' ''ls')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.atlas.7047.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.atlas.7047.sh
Debug: doFunction(): Function runAs returned status 2
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--command=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" --debug) with environment mandatories=command, optionals=debug
user
admin
service
console
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=command debug, Values=ls -l "/data/raaf-repo/private/software/SystemRescueCd 4" 1
Debug: parseParameters(): Writing variable "command" with value: "ls -l "/data/raaf-repo/private/software/SystemRescueCd 4"" to /home/rubin/.session/tmp/session.parameters.7185
Debug: parseParameters(): Writing variable "debug" with value: "1" to /home/rubin/.session/tmp/session.parameters.7185
Debug: parseParameters(): Sourcing /home/rubin/.session/tmp/session.parameters.7185
Debug: parseParameters(): Moving /home/rubin/.session/tmp/session.parameters.7185 to /home/rubin/.session/tmp/session.debug.parameters.7185
Entering mapEntryPoint(atlas checkState,runAs)
Entering dynamicHandler(atlas)
Debug: dynamicHandler(): Not a dynamic group: atlas, passing to parseEntry
Entering parseEntry(atlas) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(atlas /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for atlas with value guest
Entering capsFirst(guest)
Entering parseGuest(atlas)
Entering tokenReader(setVars atlas osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Using previously set entry for atlas
Entering cutParentheses(guest atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio))
Debug: tokenReader(): Looking up osmt for atlas at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "ubuntu12" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up acmt for atlas at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up exmt for atlas at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "ssh" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up user for atlas at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up admin for atlas at position 7
Debug: tokenReader(): Writing variable "admin" with value: "root" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up addr for atlas at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.5" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Looking up host for atlas at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.7185 to /home/rubin/.session/tmp/session.debug.tokens.7185
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
atlas(ubuntu12,ssh,ssh,rubin,root,172.17.1.5,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.7185
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.7185 to /home/rubin/.session/tmp/session.debug.tokens.7185
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for atlas with value guest
Debug: tokenValidator(): Verifying osmt for atlas with value ubuntu12
Debug: tokenValidator(): Verifying acmt for atlas with value ssh
Debug: tokenValidator(): Verifying exmt for atlas with value ssh
Debug: tokenValidator(): Verifying user for atlas with value rubin
Debug: tokenValidator(): Verifying admin for atlas with value root
Debug: tokenValidator(): Verifying addr for atlas with value 172.17.1.5
Entering checkNameOrAddress(172.17.1.5)
Debug: tokenValidator(): Verifying vrmt for atlas with value esx
Debug: tokenValidator(): Verifying port for atlas with value none
Debug: tokenValidator(): Verifying svmt for atlas with value none
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Entering osGlobals(ubuntu12)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(atlas checkState,runAs) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(atlas) with environment type=guest, acmt=ssh, exmt=ssh
Entering sshAccessHandler(state) with environment name=atlas, addr=172.17.1.5, acstate=unset, terminal=screen
Entering printPortState(172.17.1.5 22) with environment timeout=1501
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 22 172.17.1.5
Debug: printPortState(): Port 22 on 172.17.1.5 is open
Debug: mapEntity(): Running function: runAs
Entering runAs(atlas) with environment execute=true, exmt=ssh, runastype=user
Entering sshExecHandler(runasuser) with environment addr=172.17.1.5, name=atlas, type=guest, host=esxio, exstate=active, user=rubin, admin=root, command=ls
-l
"/data/raaf-repo/private/software/SystemRescueCd
4"
Entering isLoopback(172.17.1.5)
Entering isLocal(atlas)
Debug: sshExecHandler(): Attempting to execute user-level command remotely (on atlas)
Entering sshTellCommandWriter(172.17.1.5 rubin ls -l "/data/raaf-repo/private/software/SystemRescueCd 4")
Entering viaScript(ssh -i /home/rubin/.ssh/id_dsa -l 'rubin' '172.17.1.5' 'ls -l "/data/raaf-repo/private/software/SystemRescueCd 4"')
Debug: viaScript(): Writing UNIX shell script
Debug: viaScript(): Executing /home/rubin/.session/tmp/session.tell.atlas.7185.sh
Debug: viaScript(): Not removing /home/rubin/.session/tmp/session.tell.atlas.7185.sh
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable "debug" with value: "1"
Entering mapEntryPoint(wilco checkState,accessEntity)
Entering dynamicHandler(wilco)
Debug: dynamicHandler(): Not a dynamic group: wilco, passing to parseEntry
Entering parseEntry(wilco) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(wilco /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for wilco with value guest
Entering capsFirst(guest)
Entering parseGuest(wilco)
Entering tokenReader(setVars wilco osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
wilco(win2k3,rdp,smb,rubin,admin,172.17.1.3,esxio)
Debug: tokenReader(): Using previously set entry for wilco
Entering cutParentheses(guest wilco(win2k3,rdp,smb,rubin,admin,172.17.1.3,esxio))
Debug: tokenReader(): Looking up osmt for wilco at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win2k3" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up acmt for wilco at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up exmt for wilco at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up user for wilco at position 6
Debug: tokenReader(): Writing variable "user" with value: "rubin" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up admin for wilco at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up addr for wilco at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.3" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Looking up host for wilco at position 9
Debug: tokenReader(): Writing variable "host" with value: "esxio" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.13045 to /home/rubin/.session/tmp/session.debug.tokens.13045
Entering tokenReader(setVars esxio vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
wilco(win2k3,rdp,smb,rubin,admin,172.17.1.3,esxio)
Debug: tokenReader(): Reading entry for esxio
Entering entryReader(esxio /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host esxio(esxi4,ssh,ssh,root,root,172.17.1.4,esx))
Debug: tokenReader(): Looking up vrmt for esxio at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.13045
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.13045 to /home/rubin/.session/tmp/session.debug.tokens.13045
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for wilco with value guest
Debug: tokenValidator(): Verifying osmt for wilco with value win2k3
Debug: tokenValidator(): Verifying acmt for wilco with value rdp
Debug: tokenValidator(): Verifying exmt for wilco with value smb
Debug: tokenValidator(): Verifying user for wilco with value rubin
Debug: tokenValidator(): Verifying admin for wilco with value admin
Debug: tokenValidator(): Verifying addr for wilco with value 172.17.1.3
Entering checkNameOrAddress(172.17.1.3)
Debug: tokenValidator(): Verifying vrmt for wilco with value esx
Debug: tokenValidator(): Verifying port for wilco with value none
Debug: tokenValidator(): Verifying svmt for wilco with value none
Entering isLoopback(172.17.1.3)
Entering isLocal(wilco)
Entering osGlobals(win2k3)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(wilco checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(wilco) with environment type=guest, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=wilco, addr=172.17.1.3, acstate=unset, desktop=xfreerdp
Entering printPortState(172.17.1.3 3389) with environment timeout=1501
Entering isLoopback(172.17.1.3)
Entering isLocal(wilco)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.3
Debug: printPortState(): Port 3389 on 172.17.1.3 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.3 445) with environment timeout=1501
Entering isLoopback(172.17.1.3)
Entering isLocal(wilco)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.3
Debug: printPortState(): Port 445 on 172.17.1.3 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(wilco) with environment acmt=rdp, access=true, xsastype=user, user=rubin, upwd=, admin=admin, apwd=
Entering rdpAccessHandler(access) with environment name=wilco, addr=172.17.1.3, acstate=active, desktop=xfreerdp
Entering isLoopback(172.17.1.3)
Entering xfreerdpDesktopHandler()
Entering rdpFileWriter() with environment addr=172.17.1.3, xsasuser=rubin, name=wilco; writing /home/rubin/.session/sys/wilco/wilco.rdp
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable "debug" with value: "1"
Entering mapEntryPoint(eight checkState,accessEntity)
Entering dynamicHandler(eight)
Debug: dynamicHandler(): Not a dynamic group: eight, passing to parseEntry
Entering parseEntry(eight) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(eight /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for eight with value guest
Entering capsFirst(guest)
Entering parseGuest(eight)
Entering tokenReader(setVars eight osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian)
Debug: tokenReader(): Using previously set entry for eight
Entering cutParentheses(guest eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian))
Debug: tokenReader(): Looking up osmt for eight at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up acmt for eight at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up exmt for eight at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up user for eight at position 6
Debug: tokenReader(): Writing variable "user" with value: "test" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up admin for eight at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up addr for eight at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.53" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Looking up host for eight at position 9
Debug: tokenReader(): Writing variable "host" with value: "zildjian" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.31661 to /home/rubin/.session/tmp/session.debug.tokens.31661
Entering tokenReader(setVars zildjian vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian)
Debug: tokenReader(): Reading entry for zildjian
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host zildjian(esxi6,ssh,ssh,root,root,172.17.1.40,esx))
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.31661
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.31661 to /home/rubin/.session/tmp/session.debug.tokens.31661
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for eight with value guest
Debug: tokenValidator(): Verifying osmt for eight with value win8
Debug: tokenValidator(): Verifying acmt for eight with value rdp
Debug: tokenValidator(): Verifying exmt for eight with value smb
Debug: tokenValidator(): Verifying user for eight with value test
Debug: tokenValidator(): Verifying admin for eight with value admin
Debug: tokenValidator(): Verifying addr for eight with value 172.17.1.53
Entering checkNameOrAddress(172.17.1.53)
Debug: tokenValidator(): Verifying vrmt for eight with value esx
Debug: tokenValidator(): Verifying port for eight with value none
Debug: tokenValidator(): Verifying svmt for eight with value none
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(eight checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(eight) with environment type=guest, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=eight, addr=172.17.1.53, acstate=unset, desktop=xfreerdp
Entering printPortState(172.17.1.53 3389) with environment timeout=1501
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.53
Debug: printPortState(): Port 3389 on 172.17.1.53 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.53 445) with environment timeout=1501
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.53
Debug: printPortState(): Port 445 on 172.17.1.53 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(eight) with environment acmt=rdp, access=true, xsastype=user, user=test, upwd=, admin=admin, apwd=
Entering rdpAccessHandler(access) with environment name=eight, addr=172.17.1.53, acstate=active, desktop=xfreerdp
Entering isLoopback(172.17.1.53)
Entering xfreerdpDesktopHandler()
Entering rdpFileWriter() with environment addr=172.17.1.53, xsasuser=test, name=eight; writing /home/rubin/.session/sys/eight/eight.rdp
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
Entering handleSshPrivateKeys()
Debug: handleSshPrivateKeys(): Reusing previously set environment variables for running ssh-agent
Entering parseParameters(--debug) with environment mandatories=, optionals=debug
user
admin
service
tabbed
console
command
parent
mode
resilient, silence=true
Debug: parseParameters(): Variables=debug, Values=1
Debug: parseParameters(): Setting variable "debug" with value: "1"
Entering mapEntryPoint(eight checkState,accessEntity)
Entering dynamicHandler(eight)
Debug: dynamicHandler(): Not a dynamic group: eight, passing to parseEntry
Entering parseEntry(eight) with environment config=/home/rubin/.session/tmp/session.conf.active
Entering entryReader(eight /home/rubin/.session/tmp/session.conf.active)
Entering tokenValidator(type)
Debug: tokenValidator(): Verifying type for eight with value guest
Entering capsFirst(guest)
Entering parseGuest(eight)
Entering tokenReader(setVars eight osmt,acmt,exmt,user,admin,addr,host) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian)
Debug: tokenReader(): Using previously set entry for eight
Entering cutParentheses(guest eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian))
Debug: tokenReader(): Looking up osmt for eight at position 3
Debug: tokenReader(): Writing variable "osmt" with value: "win8" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up acmt for eight at position 4
Debug: tokenReader(): Writing variable "acmt" with value: "rdp" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up exmt for eight at position 5
Debug: tokenReader(): Writing variable "exmt" with value: "smb" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up user for eight at position 6
Debug: tokenReader(): Writing variable "user" with value: "test" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up admin for eight at position 7
Debug: tokenReader(): Writing variable "admin" with value: "admin" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up addr for eight at position 8
Debug: tokenReader(): Writing variable "addr" with value: "172.17.1.53" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Looking up host for eight at position 9
Debug: tokenReader(): Writing variable "host" with value: "zildjian" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.31847 to /home/rubin/.session/tmp/session.debug.tokens.31847
Entering tokenReader(setVars zildjian vrmt) with environment config=/home/rubin/.session/tmp/session.conf.active, entry=guest
eight(win8,rdp,smb,test,admin,172.17.1.53,zildjian)
Debug: tokenReader(): Reading entry for zildjian
Entering entryReader(zildjian /home/rubin/.session/tmp/session.conf.active)
Entering cutParentheses(host zildjian(esxi6,ssh,ssh,root,root,172.17.1.40,esx))
Debug: tokenReader(): Looking up vrmt for zildjian at position 9
Debug: tokenReader(): Writing variable "vrmt" with value: "esx" to /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Sourcing /home/rubin/.session/tmp/session.tokens.31847
Debug: tokenReader(): Moving /home/rubin/.session/tmp/session.tokens.31847 to /home/rubin/.session/tmp/session.debug.tokens.31847
Entering tokenValidator(type,name,osmt,acmt,exmt,user,admin,addr,host,vrmt,port,svmt)
Debug: tokenValidator(): Verifying type for eight with value guest
Debug: tokenValidator(): Verifying osmt for eight with value win8
Debug: tokenValidator(): Verifying acmt for eight with value rdp
Debug: tokenValidator(): Verifying exmt for eight with value smb
Debug: tokenValidator(): Verifying user for eight with value test
Debug: tokenValidator(): Verifying admin for eight with value admin
Debug: tokenValidator(): Verifying addr for eight with value 172.17.1.53
Entering checkNameOrAddress(172.17.1.53)
Debug: tokenValidator(): Verifying vrmt for eight with value esx
Debug: tokenValidator(): Verifying port for eight with value none
Debug: tokenValidator(): Verifying svmt for eight with value none
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Entering osGlobals(win8)
Debug: mapEntryPoint(): Received an entity , passing to mapEntity
Entering mapEntity(eight checkState,accessEntity) with environment mode=serial
Debug: mapEntity(): Target state is: on
Debug: mapEntity(): Running function: checkState
Entering checkState(eight) with environment type=guest, acmt=rdp, exmt=smb
Entering rdpAccessHandler(state) with environment name=eight, addr=172.17.1.53, acstate=unset, desktop=xfreerdp
Entering printPortState(172.17.1.53 3389) with environment timeout=1501
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 3389 172.17.1.53
Debug: printPortState(): Port 3389 on 172.17.1.53 is open
Entering smbExecHandler(state)
Entering printPortState(172.17.1.53 445) with environment timeout=1501
Entering isLoopback(172.17.1.53)
Entering isLocal(eight)
Debug: printPortState(): Command is:  nmap -n -T5 --host-timeout 1501 -PN -p 445 172.17.1.53
Debug: printPortState(): Port 445 on 172.17.1.53 is open
Entering waitForDialog(gnome-keyring-daemon gnome-keyring-prompt)
Debug: mapEntity(): Running function: accessEntity
Entering accessEntity(eight) with environment acmt=rdp, access=true, xsastype=user, user=test, upwd=, admin=admin, apwd=
Entering rdpAccessHandler(access) with environment name=eight, addr=172.17.1.53, acstate=active, desktop=xfreerdp
Entering isLoopback(172.17.1.53)
Entering xfreerdpDesktopHandler()
Entering rdpFileWriter() with environment addr=172.17.1.53, xsasuser=test, name=eight; writing /home/rubin/.session/sys/eight/eight.rdp
Debug: mapEntryPoint(): Function list contains access functions, calling terminal exit hooks
